// index.ts
var Khalti = class {
  _mode = "Sandbox";
  _secretKey = "";
  _returnUrl = "";
  _websiteUrl = "";
  _apiEndPoints = "https://a.khalti.com/api/v2/" /* Sandbox */;
  /**
   * this sets the secret key
   * @param secretKey
   *
   */
  _setSecretKey(secretKey) {
    if (typeof secretKey === "undefined")
      throw new Error("secret key is required");
    this._secretKey = secretKey;
  }
  /**
   *
   * @param returnUrl
   * - URL where the user will be redirected after the transaction is completed
   * - must be a valid URL
   * @param websiteUrl
   * - URL of the merchant website
   * - must be a valid URL
   */
  _setUrls(returnUrl, websiteUrl) {
    if (typeof returnUrl === "undefined")
      throw new Error("redirect url is required");
    if (typeof websiteUrl === "undefined")
      throw new Error("website url is required");
    this._returnUrl = returnUrl;
    this._websiteUrl = websiteUrl;
  }
  getPaymentUrl(props) {
    if (Object.keys(props || {}).length == 0)
      throw new Error("All required parameters should be passed");
    if (typeof window !== "undefined")
      throw new Error(
        "Cannot process this in client side, use server to avoid CORS."
      );
    const data = {
      return_url: this._returnUrl,
      website_url: this._websiteUrl,
      ...props
    };
    return this._requestPaymentUrl(
      this._apiEndPoints + "epayment/initiate/",
      data
    );
  }
  /**
   *
   * @param url
   * - khalti payment api endpoint
   * @param data
   * - all required data aggregated
   */
  async _requestPaymentUrl(url, data) {
    try {
      const response = await fetch(url, {
        method: "POST",
        headers: {
          Authorization: `Key ${this._secretKey}`,
          "Content-Type": "application/json"
        },
        body: JSON.stringify(data)
      });
      return await response.json();
    } catch (error) {
      console.log(error);
    }
  }
  /**
   * @param pidx
   * - payment id of a transaction
   * @example
   * ```ts
   * const khalti = new Khalti({...})
   * await khalti.getPaymentStatus("HT6o6PEZRWFJ5ygavzHWd5")
   * ```
   */
  getPaymentStatus(pidx) {
    return this._lookupRequest(this._apiEndPoints + "epayment/lookup/", pidx);
  }
  async _lookupRequest(url, pidx) {
    try {
      const response = await fetch(url, {
        method: "POST",
        body: JSON.stringify({ pidx }),
        headers: {
          Authorization: `Key ${this._secretKey}`,
          "Content-Type": "application/json"
        }
      });
      return await response.json();
    } catch (error) {
      console.log(error);
      return null;
    }
  }
  constructor(props) {
    if (!props)
      return;
    const { mode, secretKey, returnUrl, websiteUrl } = props;
    if (typeof secretKey === "undefined")
      throw new Error("khalti secret key is required");
    this._mode = mode;
    this._setSecretKey(secretKey);
    this._setUrls(returnUrl, websiteUrl);
    if (this._mode === "Sandbox") {
      this._apiEndPoints = "https://a.khalti.com/api/v2/" /* Sandbox */;
    }
    if (this._mode === "Production") {
      this._apiEndPoints = "https://khalti.com/api/v2/" /* Production */;
    }
  }
};
export {
  Khalti as default
};
