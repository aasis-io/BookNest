import type { ExtendedRefs } from "@floating-ui/react";
import type { Dispatch, FC, HTMLProps, ReactElement, ReactNode, SetStateAction } from "react";
import type { DeepPartial } from "flowbite-react/dist/types/types";
import { type ButtonProps } from "flowbite-react/dist/types/components/Button";
import type { FloatingProps, FlowbiteFloatingTheme } from "flowbite-react/dist/types/components/Floating";
import { type FlowbiteDropdownDividerTheme } from "flowbite-react/dist/types/components/Dropdown/DropdownDivider";
import { type FlowbiteDropdownHeaderTheme } from "flowbite-react/dist/types/components/Dropdown/DropdownHeader";
import { type FlowbiteDropdownItemTheme } from "flowbite-react/dist/types/components/Dropdown/DropdownItem";
export interface FlowbiteDropdownFloatingTheme extends FlowbiteFloatingTheme, FlowbiteDropdownDividerTheme, FlowbiteDropdownHeaderTheme {
    item: FlowbiteDropdownItemTheme;
}
export interface FlowbiteDropdownTheme {
    floating: FlowbiteDropdownFloatingTheme;
    content: string;
    inlineWrapper: string;
    arrowIcon: string;
}
export interface DropdownProps extends Pick<FloatingProps, "placement" | "trigger">, Omit<ButtonProps, "theme"> {
    arrowIcon?: boolean;
    dismissOnClick?: boolean;
    floatingArrow?: boolean;
    inline?: boolean;
    label: ReactNode;
    theme?: DeepPartial<FlowbiteDropdownTheme>;
    enableTypeAhead?: boolean;
    renderTrigger?: (theme: FlowbiteDropdownTheme) => ReactElement;
    "data-testid"?: string;
}
export interface TriggerProps extends Omit<ButtonProps, "theme"> {
    refs: ExtendedRefs<HTMLElement>;
    inline?: boolean;
    theme: FlowbiteDropdownTheme;
    setButtonWidth?: Dispatch<SetStateAction<number | undefined>>;
    getReferenceProps: (userProps?: HTMLProps<Element> | undefined) => Record<string, unknown>;
    renderTrigger?: (theme: FlowbiteDropdownTheme) => ReactElement;
}
export declare const Dropdown: FC<DropdownProps> & {
    Item: (<C extends import("react").ElementType = "button">(props: import("flowbite-react/dist/types/components/Dropdown/DropdownItem").DropdownItemProps<C>) => JSX.Element) & {
        displayName?: string | undefined;
    };
    Header: FC<import("flowbite-react/dist/types/components/Dropdown/DropdownHeader").DropdownHeaderProps>;
    Divider: FC<import("flowbite-react/dist/types/components/Dropdown/DropdownDivider").DropdownDividerProps>;
};
